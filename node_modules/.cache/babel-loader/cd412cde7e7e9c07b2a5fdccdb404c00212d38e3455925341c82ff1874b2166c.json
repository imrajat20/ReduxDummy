{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst initialStateAuth = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialStateAuth,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return {counter : state.counter + 1, showCounter: state.showCounter};\n\n//     }\n//     if(action.type === 'decrement'){\n//         return {counter : state.counter - 1, showCounter: state.showCounter};\n//     }\n//     if(action.type === 'increase'){\n//         return {counter : state.counter + action.amount, showCounter: state.showCounter};\n//     }\n//     if(action.type === 'decrease'){\n//         return {counter : state.counter - action.amount, showCounter: state.showCounter};\n//     }\n\n//     if(action.type === \"toggle\"){\n//         return {counter : state.counter, showCounter: !state.showCounter};\n//     }\n\n//     return state;\n// };\n\nconst Store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default Store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialStateAuth","isAuthenticated","authSlice","login","logout","Store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/amity/Downloads/008 01-starting-project/01-starting-project/src/store/Store.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {counter : 0, showCounter:true}\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\nconst initialStateAuth = {isAuthenticated: false};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialStateAuth,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        },\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment'){\r\n//         return {counter : state.counter + 1, showCounter: state.showCounter};\r\n\r\n//     }\r\n//     if(action.type === 'decrement'){\r\n//         return {counter : state.counter - 1, showCounter: state.showCounter};\r\n//     }\r\n//     if(action.type === 'increase'){\r\n//         return {counter : state.counter + action.amount, showCounter: state.showCounter};\r\n//     }\r\n//     if(action.type === 'decrease'){\r\n//         return {counter : state.counter - action.amount, showCounter: state.showCounter};\r\n//     }\r\n\r\n//     if(action.type === \"toggle\"){\r\n//         return {counter : state.counter, showCounter: !state.showCounter};\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst Store = configureStore({\r\n    reducer: {counter : counterSlice.reducer, auth: authSlice.reducer}\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default Store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAG,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAEpD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMW,gBAAgB,GAAG;EAACC,eAAe,EAAE;AAAK,CAAC;AAEjD,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZJ,YAAY,EAAEa,gBAAgB;EAC9BR,QAAQ,EAAC;IACLW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAAClB,OAAO,EAAGE,YAAY,CAACgB,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAO;AACrE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment'){\n//         return {counter : state.counter + 1, showCounter: state.showCounter};\n\n//     }\n//     if(action.type === 'decrement'){\n//         return {counter : state.counter - 1, showCounter: state.showCounter};\n//     }\n//     if(action.type === 'increase'){\n//         return {counter : state.counter + action.amount, showCounter: state.showCounter};\n//     }\n//     if(action.type === 'decrease'){\n//         return {counter : state.counter - action.amount, showCounter: state.showCounter};\n//     }\n\n//     if(action.type === \"toggle\"){\n//         return {counter : state.counter, showCounter: !state.showCounter};\n//     }\n\n//     return state;\n// };\n\nconst Store = configureStore(counterSlice.reducer);\nexport default Store;","map":{"version":3,"names":["configureStore","createSlice","createStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","Store","reducer"],"sources":["C:/Users/amity/Downloads/008 01-starting-project/01-starting-project/src/store/Store.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\r\nimport {createStore} from 'redux';\r\n\r\nconst initialState = {counter : 0, showCounter:true}\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state, action){\r\n            state.counter = state.counter + action.amount;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//     if(action.type === 'increment'){\r\n//         return {counter : state.counter + 1, showCounter: state.showCounter};\r\n\r\n//     }\r\n//     if(action.type === 'decrement'){\r\n//         return {counter : state.counter - 1, showCounter: state.showCounter};\r\n//     }\r\n//     if(action.type === 'increase'){\r\n//         return {counter : state.counter + action.amount, showCounter: state.showCounter};\r\n//     }\r\n//     if(action.type === 'decrease'){\r\n//         return {counter : state.counter - action.amount, showCounter: state.showCounter};\r\n//     }\r\n\r\n//     if(action.type === \"toggle\"){\r\n//         return {counter : state.counter, showCounter: !state.showCounter};\r\n//     }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst Store = configureStore(counterSlice.reducer);\r\n\r\nexport default Store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAAQC,WAAW,QAAO,OAAO;AAEjC,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAG,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAEpD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAC;MACnBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IACjD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMW,KAAK,GAAGhB,cAAc,CAACM,YAAY,CAACW,OAAO,CAAC;AAElD,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}